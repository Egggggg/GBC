/// Returns a new initialized IO memory segment
///
/// Some cells are not meant to be initialized at boot, and are set to None
pub fn init_io() -> [Option<u8>; 0x80] {
    // Initial values from mooneye's test roms (misc/boot_hwio-C.s)
    let initial: [u8; 0x80] = [
        0xFF, 0x00, 0x7E, 0xFF, 0x00, 0x00, 0x00, 0xF8, // FF04
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xE1, // FF0C
        0x80, 0xBF, 0xF3, 0xFF, 0xBF, 0xFF, 0x3F, 0x00, // FF14
        0xFF, 0xBF, 0x7F, 0xFF, 0x9F, 0xFF, 0xBF, 0xFF, // FF1C
        0xFF, 0x00, 0x00, 0xBF, 0x77, 0xF3, 0xF1, 0xFF, // FF24
        0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, // FF2C
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // FF34
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // FF3C
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, // FF44
        0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFE, // FF4C
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // FF54
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // FF5C
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // FF64
        0xC8, 0xFF, 0xD0, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // FF6C
        0xFF, 0xFF, 0x00, 0x00, 0xFF, 0x8F, 0x00, 0x00, // FF74
        0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, // FF7C
    ];

    // 1s are initialized, 0s are uninitialized
    let init_mask: [u32; 4] = [
        0b11110111_11111111_11111111_11111111,
        0b11111111_11111111_00000000_00000000,
        0b00110101_00111111_11111111_11111111,
        0b11111111_11111111_11111111_11111111,
    ];

    let mut memory: [Option<u8>; 0x80] = [None; 0x80];

    // Go through initial memory, outputting None for bytes with their mask set to `0`
    // Do it in 4 groups, since the mask is broken into 4 `u32`s
    for i in 0..4 {
        let map = init_mask[i];

        for bit in 0..32 {
            // Get the current byte address within IO memory
            let mem_addr = bit + i * 32;

            // This translates the bit index (0-32) to a mask, starting from the left side (high)
            if map & (1 << 31 - bit) > 0 {
                memory[mem_addr] = Some(initial[mem_addr]);
            } else {
                memory[mem_addr] = None;
            }
        }
    }

    memory
}
